$integration: 'http://ibm.com/appconnect/integration/v2/integrationFile'
integration:
  type: trigger-action
  trigger-interfaces:
    trigger-interface-1:
      type: event-trigger
      triggers:
        CREATED:
          input-context:
            data: incident
          assembly:
            $ref: '#/integration/assemblies/assembly-1'
          options: {}
      connector-type: servicenow
  action-interfaces:
    action-interface-1:
      type: api-action
      business-object: Issue
      connector-type: jira
      actions:
        CREATE: {}
    action-interface-2:
      type: api-action
      business-object: Issue
      connector-type: jira
      actions:
        RETRIEVEALL: {}
    action-interface-3:
      type: api-action
      business-object: message
      connector-type: slack
      actions:
        CREATE: {}
    action-interface-4:
      type: api-action
      business-object: Issue
      connector-type: jira
      actions:
        CREATE: {}
  assemblies:
    assembly-1:
      assembly:
        execute:
          - if:
              name: If
              input:
                - variable: Trigger
                  $ref: '#/trigger/payload'
              branch:
                - condition:
                    '{{$Trigger.urgency}}': '1'
                  execute:
                    - create-action:
                        name: Jira Create issue
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-1'
                        map:
                          mappings:
                            - issuetype:
                                mappings:
                                  - name:
                                      template: Bug
                            - key:
                                template: APCONN
                            - priority:
                                mappings:
                                  - name:
                                      template: High
                            - reporter:
                                mappings:
                                  - name:
                                      template: IBM Testa
                            - summary:
                                template: '{{$Trigger.short_description}}'
                          $map: 'http://ibm.com/appconnect/map/v1'
                          input:
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                    - retrieve-action:
                        name: Jira Retrieve issues
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-2'
                        filter:
                          where:
                            id: '{{$JiraCreateissue.id}}'
                          input:
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: JiraCreateissue
                              $ref: >-
                                #/block/If/node-output/Jira Create
                                issue/response/payload
                          limit: 1
                        allow-truncation: false
                        pagination-type: SKIP_LIMIT
                        allow-empty-output: false
                    - create-action:
                        name: Slack Create message
                        target:
                          $ref: '#/integration/action-interfaces/action-interface-3'
                        map:
                          mappings:
                            - channel:
                                template: C3HECF803
                            - text:
                                template: >-
                                  Check Jira for the new priority
                                  {{$Trigger.urgency}} issue created with issue
                                  ID Issue {{$JiraCreateissue.id}} and issue key
                                  {{$JiraRetrieveissues.key}} --- for ServiceNow
                                  incident {{$Trigger.number}}
                          $map: 'http://ibm.com/appconnect/map/v1'
                          input:
                            - variable: Trigger
                              $ref: '#/trigger/payload'
                            - variable: JiraCreateissue
                              $ref: >-
                                #/block/If/node-output/Jira Create
                                issue/response/payload
                            - variable: JiraRetrieveissues
                              $ref: >-
                                #/block/If/node-output/Jira Retrieve
                                issues/response/payload
                            - variable: JiraRetrieveissuesMetadata
                              $ref: >-
                                #/block/If/node-output/Jira Retrieve
                                issues/response
              else:
                execute:
                  - create-action:
                      name: Jira Create issue 2
                      target:
                        $ref: '#/integration/action-interfaces/action-interface-4'
                      map:
                        mappings:
                          - description:
                              template: '{{$Trigger.description}}'
                          - issuetype:
                              mappings:
                                - name:
                                    template: Task
                          - key:
                              template: APCONN
                          - priority:
                              mappings:
                                - name:
                                    template: Low
                          - reporter:
                              mappings:
                                - name:
                                    template: IBM  Testa
                          - summary:
                              template: '{{$Trigger.short_description}}'
                        $map: 'http://ibm.com/appconnect/map/v1'
                        input:
                          - variable: Trigger
                            $ref: '#/trigger/payload'
              output-schema: {}
  name: Assign ServiceNow incidents to Jira and Slack
  description: >-
    This template detects when a new ServiceNow incident is created; if the
    incident has a High urgency creates an issue in Jira and sends a message to
    a Slack channel; otherwise, create a task in Jira. The flow illustrates the
    use of Jira create and retrieve actions, and the use of an If node to take
    alternative actions depending on data from the ServiceNow new incident
    trigger event.
  todo: >
    To refer to these instructions while editing the flow, open [the github
    page](https://github.com/ot4i/app-connect-templates/blob/master/resources/markdown/Assign%20ServiceNow%20incidents%20to%20Jira%20and%20Slack_instructions.md)
    (opens in a new window).


    1. Click **Create flow** to start using the template.

    1. Connect to your [ServiceNow account](http://ibm.biz/acservicenow).

    1. Connect to your [Jira account](http://ibm.biz/ach2jira).

    1. For the Jira "Create issue" action in the If branch (for incidents with
    urgency=high), select the project in which you want to create the issue.

    1. For the Jira "Create issue" action in the Else branch (for other
    incidents), select the project in which you want to create the issue.

    1. Connect to your [Slack account](http://ibm.biz/acslack).

    1. For the Slack "Create message" action in the If node, select the channel
    to which you want to post your message.

    1. To start the flow, in the banner open the options menu [&#8942;] then
    click **Start flow**.


    To test the flow, in your ServiceNow account create a new incident with
    urgency=high; you should see a new issue created in Jira and a message added
    to your Slack channel.

    Create a new incident with urgency=low (for example); you should see a new
    task created in Jira.
models: {}
