$integration: 'http://ibm.com/appconnect/integration/v2/integrationFile'
integration:
  type: trigger-action
  trigger-interfaces:
    trigger-interface-1:
      type: event-trigger
      triggers:
        SCHEDULE:
          input-context:
            data: scheduler
          assembly:
            $ref: '#/integration/assemblies/assembly-1'
          options:
            subscription:
              scheduleConfiguration:
                calendar:
                  cronExp: 00 18 * * *
                  runOnceOncheck: false
                  timeZone: GMT
                  every: day
      connector-type: streaming-connector-scheduler
    trigger-interface-2:
      type: extract-trigger
      triggers:
        RETRIEVEALL:
          input-context:
            data: DB2INST1_Productsfcc
          assembly:
            $ref: '#/integration/assemblies/assembly-2'
      connector-type: ibmdb2
  action-interfaces:
    action-interface-3:
      type: batch-action
      actions:
        START: {}
      options:
        extract:
          $ref: '#/integration/trigger-interfaces/trigger-interface-2'
    action-interface-2:
      type: api-action
      business-object: products
      connector-type: sfcommerceclouddata
      actions:
        CREATE: {}
  assemblies:
    assembly-1:
      assembly:
        execute:
          - set-variable:
              name: Set variable
              map:
                $map: 'http://ibm.com/appconnect/map/v1'
                customSchemas:
                  properties.`variable`:
                    type: object
                    properties:
                      todays_date:
                        type: string
                mappings:
                  - variable:
                      mappings:
                        - todays_date:
                            template: '{{$substring($now(), 0, 10)}}'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
          - batch-retrieve-action:
              name: Batch process
              filter:
                where:
                  prdCreatedDate: '{{$Setvariable.variable.todays_date}}'
                input:
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: Setvariable
                    $ref: '#/node-output/Set variable/response/payload'
                limit: 10
              pagination-type: SKIP_LIMIT
              target:
                $ref: '#/integration/action-interfaces/action-interface-3'
    assembly-2:
      assembly:
        execute:
          - parse:
              name: JSON Parser Parse
              parse-format: json
              source:
                template: '{{$Batchprocess}}'
                input:
                  - variable: Batchprocess
                    $ref: '#/block/Batch process/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: Setvariable
                    $ref: '#/node-output/Set variable/response/payload'
              sample-data: >-
                {"prdId":4,"prdName":"product4","prdCost":0.4,"prdCreatedDate":"2018-07-23T00:00:00.048Z"}
              output-schema:
                $schema: 'http://json-schema.org/draft-04/schema#'
                type: object
                properties:
                  prdId:
                    type: number
                  prdName:
                    type: string
                  prdCost:
                    type: number
                  prdCreatedDate:
                    type: string
                  catalog:
                    type: string
                title: Parsed JSON
          - create-action:
              name: Salesforce Commerce Cloud Digital Data Create product
              target:
                $ref: '#/integration/action-interfaces/action-interface-2'
              map:
                mappings:
                  - id:
                      template: '{{$JSONParserParse.prdId}}'
                  - name:
                      template: '{{$JSONParserParse.prdName}}'
                  - owning_catalog_id:
                      template: '{{$JSONParserParse.catalog}}'
                $map: 'http://ibm.com/appconnect/map/v1'
                input:
                  - variable: Batchprocess
                    $ref: '#/block/Batch process/current-item'
                  - variable: Trigger
                    $ref: '#/trigger/payload'
                  - variable: Setvariable
                    $ref: '#/node-output/Set variable/response/payload'
                  - variable: JSONParserParse
                    $ref: >-
                      #/block/Batch process/node-output/JSON Parser
                      Parse/response/payload
  name: "Sync products from IBM Db2 to Salesforce Commerce Cloud\_"
  description: >-
    Use this template to schedule a flow that runs once a day to retrieve new
    product records that were added to an IBM Db2 database, and then create
    corresponding products in Salesforce Commerce Cloud.
  todo: >
    To refer to these instructions while editing the flow, open [the github
    page](https://github.com/ot4i/app-connect-templates/blob/master/resources/markdown/Sync%20products%20from%20IBM%20Db2%20to%20Salesforce%20Commerce%20Cloud_instructions.md)
    (opens in a new window).


    ## Prerequisites


    This template references entities that you can create as follows:


    - In your IBM Db2 instance, create a database table named **PRODUCTSFCC** in
    the **DB2INST1** schema with the following 5 columns: 


    | Name | Type | 

    | :---  | :---  |

    | `PRD_ID` | `BIGINT` | 

    | `PRD_NAME` | `VARCHAR(50 OCTETS)` | 

    | `PRD_COST` | `DOUBLE` | 

    | `PRD_CREATED_DATE` | `DATE` | 

    | `CATALOG` | `VARCHAR(50 OCTETS)` |

      Insert some sample data into the PRODUCTSFCC table.

    ## Using the template


    1. Click **Create flow** to start using the template.

    1. Click each node to review its configuration. If necessary:
       - Connect to your [IBM Db2](https://developer.ibm.com/integration/docs/app-connect/how-to-guides-for-apps/use-ibm-app-connect-ibm-db2/).
       - Connect to your [Salesforce Commerce Cloud](https://developer.ibm.com/integration/docs/app-connect/how-to-guides-for-apps/how-to-use-ibm-app-connect-with-salesforce-commerce-cloud/).
    1. Validate all the mappings and ensure that they are correct.

    1. To start the flow, in the banner open the options menu [&#8942;] then
    click **Start flow**.
models: {}
